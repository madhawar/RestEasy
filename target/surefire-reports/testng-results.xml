<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-05T13:16:25 IST" name="Smoke Test" finished-at="2021-08-05T13:16:38 IST" duration-ms="13115">
    <groups>
    </groups>
    <test started-at="2021-08-05T13:16:25 IST" name="Wapp" finished-at="2021-08-05T13:16:38 IST" duration-ms="13115">
      <class name="wapp.WAPP_FCOCountriesAllAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_FCOCountriesAllAPI@52102734]" started-at="2021-08-05T13:16:31 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:32 IST" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_FCOCountriesAllAPI -->
      <class name="wapp.WAPP_PriceChangeLogsAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_PriceChangeLogsAPI@355ce81c]" started-at="2021-08-05T13:16:35 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:36 IST" duration-ms="1177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_PriceChangeLogsAPI -->
      <class name="wapp.WAPP_FactorPopupAll">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_FactorPopupAll@3315d2d7]" started-at="2021-08-05T13:16:37 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:38 IST" duration-ms="1132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_FactorPopupAll -->
      <class name="wapp.WAPP_FCOCountriesAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_FCOCountriesAPI@e1de817]" started-at="2021-08-05T13:16:29 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:31 IST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_FCOCountriesAPI -->
      <class name="wapp.WAPP_PriceStaticTreeAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_PriceStaticTreeAPI@3541cb24]" started-at="2021-08-05T13:16:32 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:33 IST" duration-ms="1275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_PriceStaticTreeAPI -->
      <class name="wapp.WAPP_LocationTreeAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_LocationTreeAPI@5939a379]" started-at="2021-08-05T13:16:28 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:29 IST" duration-ms="982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_LocationTreeAPI -->
      <class name="wapp.WAPP_FCOStaticVersionExpireAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_FCOStaticVersionExpireAPI@2177849e]" started-at="2021-08-05T13:16:33 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:34 IST" duration-ms="864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_FCOStaticVersionExpireAPI -->
      <class name="wapp.WAPP_FactorPopup">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_FactorPopup@29647f75]" started-at="2021-08-05T13:16:36 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:37 IST" duration-ms="945" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected content-type "JSON" doesn't match actual content-type "".
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected content-type "JSON" doesn't match actual content-type "".

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at wapp.WAPP_FactorPopup.status200AndContentJSON(WAPP_FactorPopup.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_FactorPopup -->
      <class name="wapp.WAPP_StaticTreeAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_StaticTreeAPI@78ffe6dc]" started-at="2021-08-05T13:16:25 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:28 IST" duration-ms="3181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_StaticTreeAPI -->
      <class name="wapp.WAPP_PriceStatusAPI">
        <test-method signature="status200AndContentJSON()[pri:0, instance:wapp.WAPP_PriceStatusAPI@40cb8df7]" started-at="2021-08-05T13:16:34 IST" name="status200AndContentJSON" finished-at="2021-08-05T13:16:35 IST" duration-ms="1137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status200AndContentJSON -->
      </class> <!-- wapp.WAPP_PriceStatusAPI -->
    </test> <!-- Wapp -->
  </suite> <!-- Smoke Test -->
</testng-results>
